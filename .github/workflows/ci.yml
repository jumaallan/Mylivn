name: Mylivn
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  bundle-check:
    name: Bundle Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/src/main/kotlin/Dependencies.kt') }}
      - name: Unit tests
        run: ./gradlew -Pci --console=plain bundleDebug
  lint-check:
    name: Lint Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/src/main/kotlin/Dependencies.kt') }}
      - name: Lint checks
        run: ./gradlew -Pci --console=plain ktlintFormat ktlintCheck detekt
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/src/main/kotlin/Dependencies.kt') }}
      - name: Unit tests
        run: ./gradlew -Pci --console=plain testDebugUnitTest


  instrumented-tests:
    name: Instrumentation tests
    runs-on: macOS-latest
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        api-level: [29]
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8

      # Ensure .gradle/caches is empty before writing to it.
      # This helps us stay within Github's cache size limits.
      # Rename the folder instead of deleting it as it's faster.
      - name: Clean cache
        run: mv ~/.gradle/caches ~/.gradle/.invalid_caches

      # Restore the cache.
      # Intentionally don't set 'restore-keys' so the cache never contains redundant dependencies.
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/src/main/kotlin/Library.kt') }}

      - name: Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86
          script: ./gradlew connectedDebugAndroidTest --no-parallel